{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/selectInputs.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { totalFilter } from '../actions/';\nconst cOptions = ['coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\nclass SelectsInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coluna: '',\n      comparacao: '',\n      valor: 0\n    };\n    this.handleCh = this.handleCh.bind(this);\n  }\n\n  handleCh(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          coluna = _this$state.coluna,\n          comparacao = _this$state.comparacao,\n          valor = _this$state.valor;\n    const filter = this.props.filter;\n    let fCheck = cOptions;\n\n    if (filter.length > 0) {\n      filter.forEach(elements => {\n        if (fCheck.includes(elements.column)) {\n          fCheck.splice(fCheck.indexOf(elements.column), 1);\n        }\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"selectColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Filtros\"), React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      name: \"coluna\",\n      id: \"selectColumn\",\n      onChange: this.handleCh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, fCheck.map(elements => React.createElement(\"option\", {\n      value: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, elements))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"selectMaior\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      name: \"comparacao\",\n      id: \"selectMaior\",\n      form: \"selectForm\",\n      onChange: this.handleCh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Compara\\xE7\\xE3o\"), React.createElement(\"option\", {\n      value: \"maior que\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"maior que\"), React.createElement(\"option\", {\n      value: \"menor que\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"menor que\"), React.createElement(\"option\", {\n      value: \"igual a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"igual a\")), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"valor\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleCh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"submit\",\n      \"data-testid\": \"button-filter\",\n      onClick: () => this.props.gFilter(coluna, comparacao, valor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filters.filterByNumericValues\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gFilter: (a, b, c) => dispatch(totalFilter(a, b, c))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectsInputs);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/selectInputs.jsx"],"names":["React","connect","totalFilter","cOptions","SelectsInputs","Component","constructor","props","state","coluna","comparacao","valor","handleCh","bind","event","target","name","value","setState","render","filter","fCheck","length","forEach","elements","includes","column","splice","indexOf","map","gFilter","mapStateToProps","filters","filterByNumericValues","mapDispatchToProps","dispatch","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { totalFilter } from '../actions/';\n\nconst cOptions = [\n  'coluna',\n  'population',\n  'orbital_period',\n  'diameter',\n  'rotation_period',\n  'surface_water',\n];\n\nclass SelectsInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coluna: '',\n      comparacao: '',\n      valor: 0,\n    };\n    this.handleCh = this.handleCh.bind(this);\n  }\n  handleCh(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n  render() {\n    const { coluna, comparacao, valor } = this.state;\n    const { filter } = this.props;\n    let fCheck = cOptions;\n    if (filter.length > 0) {\n      filter.forEach((elements) => {\n        if (fCheck.includes(elements.column)) {\n          fCheck.splice(fCheck.indexOf(elements.column), 1);\n        }\n      });\n    }\n    return (\n      <div>\n        <label htmlFor=\"selectColumn\">Filtros</label>\n        <select data-testid=\"column-filter\" name=\"coluna\" id=\"selectColumn\" \n          onChange={this.handleCh}\n        >\n          {fCheck.map((elements) => (\n            <option value={elements}>{elements}</option>\n          ))}\n        </select>\n        <br />\n        <label htmlFor=\"selectMaior\"></label>\n        <select\n          data-testid=\"comparison-filter\"\n          name=\"comparacao\"\n          id=\"selectMaior\"\n          form=\"selectForm\"\n          onChange={this.handleCh}\n        >\n          <option>Comparação</option>\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n        <input\n          type=\"number\"\n          name=\"valor\"\n          data-testid=\"value-filter\"\n          onChange={this.handleCh}\n        />\n        <button\n          type=\"button\"\n          value=\"submit\"\n          data-testid=\"button-filter\"\n          onClick={() => this.props.gFilter(coluna, comparacao, valor)}\n        >\n          Filtrar\n        </button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  filter: state.filters.filterByNumericValues,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  gFilter: (a, b, c) => dispatch(totalFilter(a, b, c)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectsInputs);\n"]},"metadata":{},"sourceType":"module"}