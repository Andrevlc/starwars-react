{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues';\nimport swPlanetss from '../reducers/swPlanets';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   renderP: [],\n    // }\n\n    this.filterTest = this.filterTest.bind(this);\n  }\n\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets; // console.log('antes de chamar')\n\n    getCurrentPlanets();\n  }\n\n  filterTest() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          filter = _this$props.filter;\n    let data = swPlanetss;\n\n    if (filter.length > 0) {\n      filter.forEach(element => {\n        const column = element.column,\n              comparison = element.comparison,\n              value = element.value;\n\n        if (comparison === 'maior que') {\n          data = data.filter(plani => +plani[column] > +value);\n        } else if (comparison === 'menor que') {\n          data = data.filter(plani => +plani[column] < +value);\n        } else if (comparison === 'igual a') {\n          data = data.filter(plani => +plani[column] === +value);\n        }\n      });\n    }\n\n    return data;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          swPlanetss = _this$props2.swPlanetss,\n          isFetching = _this$props2.isFetching,\n          textFilter = _this$props2.textFilter,\n          filter = _this$props2.filter;\n    this.filterTest();\n\n    if (isFetching) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    let planet = swPlanetss;\n    if (filter.length > 0) planet = this.filterTest();\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(TableHeaders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, planet.filter(planet => planet.name.toLowerCase().includes(textFilter.toLowerCase())).map(elements => React.createElement(TableValues, {\n      key: elements.diameter,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  filter: state.filters.filterByNumericValues\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\n\n\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","PropTypes","connect","fetchPlanets","TableHeaders","TableValues","swPlanetss","Table","Component","constructor","props","filterTest","bind","componentDidMount","getCurrentPlanets","filter","data","length","forEach","element","column","comparison","value","plani","render","isFetching","textFilter","planet","name","toLowerCase","includes","map","elements","diameter","mapStateToProps","state","filters","filterByName","filterByNumericValues","mapDispatchToProps","dispatch","propTypes","func","isRequired","array","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues';\nimport swPlanetss from '../reducers/swPlanets';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   renderP: [],\n    // }\n    this.filterTest = this.filterTest.bind(this);\n  }\n  componentDidMount() {\n    const { getCurrentPlanets } = this.props;\n    // console.log('antes de chamar')\n    getCurrentPlanets();\n  }\n  filterTest() {\n    const { swPlanetss, filter } = this.props;\n    let data = swPlanetss;\n    if (filter.length > 0) {\n      filter.forEach((element) => {\n        const { column, comparison, value } = element;\n        if (comparison === 'maior que') {\n          data = data.filter((plani) => +plani[column] > +value);\n        } else if (comparison === 'menor que') {\n          data = data.filter((plani) => +plani[column] < +value);\n        } else if (comparison === 'igual a') {\n          data = data.filter((plani) => +plani[column] === +value);\n        }\n      });\n    }\n    return data;\n  }\n\n  render() {\n    const { swPlanetss, isFetching, textFilter, filter } = this.props;\n    this.filterTest();\n    if (isFetching) {\n      return <p>Carregando...</p>;\n    }\n    let planet = swPlanetss;\n    if (filter.length > 0) planet = this.filterTest();\n    return (\n      <section>\n        <table>\n          <TableHeaders />\n          <tbody>\n            {planet\n              .filter((planet) =>\n                planet.name.toLowerCase().includes(textFilter.toLowerCase())\n              )\n              .map((elements) => (\n                <TableValues key={elements.diameter} elements={elements} />\n              ))}\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  filter: state.filters.filterByNumericValues,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets()),\n});\n// Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}