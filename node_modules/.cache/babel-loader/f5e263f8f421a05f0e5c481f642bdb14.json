{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues';\nimport swPlanetss from '../reducers/swPlanets';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props); // this.state = {\n    //   renderP: [],\n    // }\n\n    this.filterTest = this.filterTest.bind(this);\n  }\n\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets; // console.log('antes de chamar')\n\n    getCurrentPlanets();\n  }\n\n  filterTest() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          filter = _this$props.filter;\n    let data = swPlanetss;\n    console.log(filter);\n\n    if (filter.length > 0) {\n      console.log('oi');\n      const column = filter.column,\n            comparison = filter.comparison,\n            value = filter.value;\n\n      if (comparison === 'maior que') {\n        data = data.filter(plani => +plani[column] > +value);\n      } else if (comparison === 'menor que') {\n        data = data.filter(plani => +plani[column] < +value);\n      } else if (comparison === 'igual a') {\n        data = data.filter(plani => +plani[column] === +value);\n      }\n    }\n\n    console.log(data);\n    return data;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          swPlanetss = _this$props2.swPlanetss,\n          isFetching = _this$props2.isFetching,\n          textFilter = _this$props2.textFilter,\n          filter = _this$props2.filter;\n    this.filterTest();\n\n    if (isFetching) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    let planet = swPlanetss;\n    if (filter.length > 0) planet = this.filterTest();\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TableHeaders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, planet.filter(planet => planet.name.toLowerCase().includes(textFilter.toLowerCase())).map(elements => React.createElement(TableValues, {\n      key: elements.diameter,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  filter: state.filters.filterByNumber\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\n\n\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","PropTypes","connect","fetchPlanets","TableHeaders","TableValues","swPlanetss","Table","Component","constructor","props","filterTest","bind","componentDidMount","getCurrentPlanets","filter","data","console","log","length","column","comparison","value","plani","render","isFetching","textFilter","planet","name","toLowerCase","includes","map","elements","diameter","mapStateToProps","state","filters","filterByName","filterByNumber","mapDispatchToProps","dispatch","propTypes","func","isRequired","array","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues'\nimport swPlanetss from '../reducers/swPlanets';\n\nclass Table extends React.Component {\n  constructor (props){\n    super(props);\n    // this.state = {\n    //   renderP: [],\n    // }\n    this.filterTest = this.filterTest.bind(this);\n  }\n  componentDidMount() {\n    const { getCurrentPlanets } = this.props;\n    // console.log('antes de chamar')\n    getCurrentPlanets();\n  }\n  filterTest() {\n    const { swPlanetss, filter } = this.props;\n    let data = swPlanetss;\n    console.log(filter)\n    if(filter.length > 0){\n      console.log('oi')\n      const { column , comparison, value } = filter;\n      \n      if(comparison === 'maior que'){\n        data = data.filter((plani) => (+(plani[column]) > +(value))\n        )}\n        else if (comparison === 'menor que'){\n          data = data.filter ((plani) => (\n            +(plani[column]) < +(value)\n          ))}\n      else if (comparison === 'igual a'){\n            data = data.filter ((plani) => (\n              +(plani[column]) === +(value)\n            ))}\n    }\n    console.log(data)\n    return data;\n  }\n\n  render() {\n    const { swPlanetss, isFetching, textFilter, filter } = this.props;\n    this.filterTest();\n    if (isFetching) { return <p>Carregando...</p>; }\n    let planet = swPlanetss\n    if (filter.length > 0)\n      planet = this.filterTest();\n    return (\n      <section>\n        <table>\n          <TableHeaders />\n          <tbody>\n          {planet\n          .filter((planet) => (planet.name.toLowerCase().includes(textFilter.toLowerCase())))\n          .map((elements) => (\n            <TableValues key={elements.diameter} elements={ elements } />\n          ))}\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  filter: state.filters.filterByNumber,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets()) });\n// Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}