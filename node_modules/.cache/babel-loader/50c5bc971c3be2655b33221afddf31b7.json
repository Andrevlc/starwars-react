{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets; // console.log('antes de chamar')\n\n    getCurrentPlanets();\n  }\n\n  filterTest() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          cColumn = _this$props.cColumn,\n          cOperation = _this$props.cOperation,\n          cNumber = _this$props.cNumber;\n    console.log(swPlanetss);\n\n    if (cColumn != undefined) {\n      swPlanetss.filter(plan => plan.cColumn.includes(cColumn));\n      if (cOperation === 'maior que') swPlanetss.filter(plani => plani.cColumn > cNumber);else if (cOperation === 'menor que') swPlanetss.filter(plani => plani.cColumn < cNumber);else if (cOperation === 'igual a') swPlanetss.filter(plani => plani.cColumn == cNumber);\n    }\n\n    console(swPlanetss);\n    return swPlanetss;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          swPlanetss = _this$props2.swPlanetss,\n          isFetching = _this$props2.isFetching,\n          textFilter = _this$props2.textFilter;\n\n    if (isFetching) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      value: \"submit\",\n      \"data-testid\": \"button-filter\",\n      onClick: this.filterTest(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Filtrar\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(TableHeaders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, swPlanetss.filter(planet => planet.name.toLowerCase().includes(textFilter.toLowerCase())).map(elements => React.createElement(TableValues, {\n      key: elements.diameter,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  cColumn: state.filters.filterByNumber.cColumn,\n  cOperation: state.filters.filterByNumber.cOperation,\n  cNumber: state.filters.filterByNumber.number\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\n\n\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","PropTypes","connect","fetchPlanets","TableHeaders","TableValues","Table","Component","componentDidMount","getCurrentPlanets","props","filterTest","swPlanetss","cColumn","cOperation","cNumber","console","log","undefined","filter","plan","includes","plani","render","isFetching","textFilter","planet","name","toLowerCase","map","elements","diameter","mapStateToProps","state","data","filters","filterByName","filterByNumber","number","mapDispatchToProps","dispatch","propTypes","func","isRequired","array","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues'\n\nclass Table extends React.Component {\n  \n  componentDidMount() {\n    const { getCurrentPlanets } = this.props;\n    // console.log('antes de chamar')\n    getCurrentPlanets();\n  }\n  filterTest() {\n    const { swPlanetss, cColumn, cOperation, cNumber } = this.props;\n    console.log(swPlanetss)\n    if(cColumn != undefined){\n      swPlanetss.filter((plan) => (\n        plan.cColumn.includes(cColumn)\n        ))\n      if(cOperation === 'maior que')\n        swPlanetss.filter((plani) => (\n          plani.cColumn > cNumber\n        ))\n      else if (cOperation === 'menor que')\n          swPlanetss.filter ((plani) => (\n            plani.cColumn < cNumber\n          ))\n      else if (cOperation === 'igual a')\n            swPlanetss.filter ((plani) => (\n              plani.cColumn == cNumber\n            ))\n    }\n    console(swPlanetss)\n    return(\n    swPlanetss\n      )\n  }\n  render() {\n    const { swPlanetss, isFetching, textFilter } = this.props;\n    if (isFetching) { return <p>Carregando...</p>; }\n    return (\n      <section>\n        <button  \n        value='submit' \n        data-testid='button-filter'\n        onClick={this.filterTest()}\n        >Filtrar</button>\n        <table>\n          <TableHeaders />\n          <tbody>\n          {swPlanetss\n          .filter((planet) => (planet.name.toLowerCase().includes(textFilter.toLowerCase())))\n          .map((elements) => (\n            <TableValues key={elements.diameter} elements={ elements } />\n          ))}\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  cColumn: state.filters.filterByNumber.cColumn,\n  cOperation: state.filters.filterByNumber.cOperation,\n  cNumber: state.filters.filterByNumber.number,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets()) });\n// Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}