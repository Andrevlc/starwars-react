{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues';\nimport swPlanetss from '../reducers/swPlanets';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      renderP: []\n    };\n    this.filterTest = this.filterTest.bind(this);\n  }\n\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets; // console.log('antes de chamar')\n\n    getCurrentPlanets();\n  }\n\n  filterTest() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          filter = _this$props.filter;\n    const column = filter.column,\n          comparison = filter.comparison,\n          value = filter.value;\n    let data = swPlanetss;\n    console.log(filter);\n\n    if (column !== undefined) {\n      if (cOperation === 'maior que') {\n        console.log('oi');\n        data = data.filter(plani => +plani[column] > +cNumber);\n      } else if (cOperation === 'menor que') {\n        data = data.filter(plani => +plani[column] < +cNumber);\n      } else if (cOperation === 'igual a') {\n        data = data.filter(plani => +plani[cColumn] === +cNumber);\n      }\n    }\n\n    console.log(data);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          swPlanetss = _this$props2.swPlanetss,\n          isFetching = _this$props2.isFetching,\n          textFilter = _this$props2.textFilter;\n    const renderP = this.state.renderP;\n    this.filterTest();\n\n    if (isFetching) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    let planet = swPlanetss;\n    if (renderP.length > 0) planet = renderP;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(TableHeaders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, planet.filter(planet => planet.name.toLowerCase().includes(textFilter.toLowerCase())).map(elements => React.createElement(TableValues, {\n      key: elements.diameter,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  filter: state.filters.filterByNumber\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\n\n\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","PropTypes","connect","fetchPlanets","TableHeaders","TableValues","swPlanetss","Table","Component","constructor","props","state","renderP","filterTest","bind","componentDidMount","getCurrentPlanets","filter","column","comparison","value","data","console","log","undefined","cOperation","plani","cNumber","cColumn","render","isFetching","textFilter","planet","length","name","toLowerCase","includes","map","elements","diameter","mapStateToProps","filters","filterByName","filterByNumber","mapDispatchToProps","dispatch","propTypes","func","isRequired","array","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues'\nimport swPlanetss from '../reducers/swPlanets';\n\nclass Table extends React.Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      renderP: [],\n    }\n    this.filterTest = this.filterTest.bind(this);\n  }\n  componentDidMount() {\n    const { getCurrentPlanets } = this.props;\n    // console.log('antes de chamar')\n    getCurrentPlanets();\n  }\n  filterTest() {\n    const { swPlanetss, filter } = this.props;\n    const { column , comparison, value } = filter;\n    let data = swPlanetss;\n    console.log(filter)\n    if(column !== undefined){\n      if(cOperation === 'maior que'){\n        console.log('oi')\n        data = data.filter((plani) => (+(plani[column]) > +(cNumber))\n        )}\n      else if (cOperation === 'menor que'){\n          data = data.filter ((plani) => (\n            +(plani[column]) < +(cNumber)\n          ))}\n      else if (cOperation === 'igual a'){\n            data = data.filter ((plani) => (\n              +(plani[cColumn]) === +(cNumber)\n            ))}\n    }\n    console.log(data)\n  }\n\n  render() {\n    const { swPlanetss, isFetching, textFilter } = this.props;\n    const { renderP } = this.state;\n    this.filterTest();\n    if (isFetching) { return <p>Carregando...</p>; }\n    let planet = swPlanetss\n    if (renderP.length > 0)\n      planet = renderP;\n    return (\n      <section>\n        <table>\n          <TableHeaders />\n          <tbody>\n          {planet\n          .filter((planet) => (planet.name.toLowerCase().includes(textFilter.toLowerCase())))\n          .map((elements) => (\n            <TableValues key={elements.diameter} elements={ elements } />\n          ))}\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  filter: state.filters.filterByNumber,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets()) });\n// Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}