{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets; // console.log('antes de chamar')\n\n    getCurrentPlanets();\n  }\n\n  render() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          isFetching = _this$props.isFetching,\n          textFilter = _this$props.textFilter;\n\n    if (isFetching) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    console.log(store.getState());\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(TableHeaders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), swPlanetss.filter(planet => planet.name.toLowerCase().includes(textFilter.toLowerCase())).map(elements => React.createElement(\"tbody\", {\n      key: elements.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, elements.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, elements.rotation_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, elements.orbital_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, elements.diameter), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, elements.climate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, elements.gravity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, elements.terrain), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, elements.surface_water), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, elements.population), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, elements.films), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, elements.created), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, elements.edited), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, elements.url))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\n\n\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","PropTypes","connect","fetchPlanets","TableHeaders","Table","Component","componentDidMount","getCurrentPlanets","props","render","swPlanetss","isFetching","textFilter","console","log","store","getState","filter","planet","name","toLowerCase","includes","map","elements","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","mapStateToProps","state","data","filters","filterByName","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const { getCurrentPlanets } = this.props;\n    // console.log('antes de chamar')\n    getCurrentPlanets();\n  }\n  render() {\n    const { swPlanetss, isFetching, textFilter } = this.props;\n    if (isFetching) { return <p>Carregando...</p>; }\n    console.log(store.getState())\n    return (\n      <section>\n        <table>\n          <TableHeaders />\n          {swPlanetss\n          .filter((planet) => (planet.name.toLowerCase().includes(textFilter.toLowerCase()) ))\n          .map((elements) => (\n            <tbody key={elements.name}>\n              <tr>\n                <td>{elements.name}</td>\n                <td>{elements.rotation_period}</td>\n                <td>{elements.orbital_period}</td>\n                <td>{elements.diameter}</td>\n                <td>{elements.climate}</td>\n                <td>{elements.gravity}</td>\n                <td>{elements.terrain}</td>\n                <td>{elements.surface_water}</td>\n                <td>{elements.population}</td>\n                <td>{elements.films}</td>\n                <td>{elements.created}</td>\n                <td>{elements.edited}</td>\n                <td>{elements.url}</td>\n              </tr>\n            </tbody>\n          ))}\n        </table>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets()) });\n// Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}