{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/selectInputs.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { totalFilter } from '../actions/';\nconst cOptions = ['coluna', 'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\nclass SelectsInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coluna: '',\n      comparacao: '',\n      valor: 0\n    };\n    this.handleCh = this.handleCh.bind(this);\n  }\n\n  handleCh(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          coluna = _this$state.coluna,\n          comparacao = _this$state.comparacao,\n          valor = _this$state.valor;\n    const filter = this.props.filter;\n    let fCheck = cOptions;\n\n    if (filter.length > 0) {\n      filter.forEach(elements => {\n        if (elements.column.includes(fCheck)) {\n          fCheck.splice(fCheck.indexOf());\n        }\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"selectColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Filtros\"), React.createElement(\"select\", {\n      \"data-testid\": \"column-filter\",\n      name: \"coluna\",\n      id: \"selectColumn\",\n      form: \"selectForm\",\n      onChange: this.handleCh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, cOptions.map(elements => React.createElement(\"option\", {\n      value: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, elements))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"selectMaior\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      \"data-testid\": \"comparison-filter\",\n      name: \"comparacao\",\n      id: \"selectMaior\",\n      form: \"selectForm\",\n      onChange: this.handleCh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Compara\\xE7\\xE3o\"), React.createElement(\"option\", {\n      value: \"maior que\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"maior que\"), React.createElement(\"option\", {\n      value: \"menor que\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"menor que\"), React.createElement(\"option\", {\n      value: \"igual a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"igual a\")), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"valor\",\n      \"data-testid\": \"value-filter\",\n      onChange: this.handleCh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"submit\",\n      \"data-testid\": \"button-filter\",\n      onClick: () => this.props.gFilter(coluna, comparacao, valor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filters.filterByNumericValues\n});\n\nconst mapDispatchToProps = dispatch => ({\n  gFilter: (a, b, c) => dispatch(totalFilter(a, b, c))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectsInputs);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/selectInputs.jsx"],"names":["React","connect","totalFilter","cOptions","SelectsInputs","Component","constructor","props","state","coluna","comparacao","valor","handleCh","bind","event","target","name","value","setState","render","filter","fCheck","length","forEach","elements","column","includes","splice","indexOf","map","gFilter","mapStateToProps","filters","filterByNumericValues","mapDispatchToProps","dispatch","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { totalFilter } from '../actions/';\n\nconst cOptions = [\n  'coluna' ,'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water',\n]\n\nclass SelectsInputs extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      coluna: '',\n      comparacao: '',\n      valor: 0,\n    }\n    this.handleCh = this.handleCh.bind(this);\n  }\n  handleCh(event){\n    const {name, value} = event.target;\n    this.setState({[name]:value})\n  }\n  render(){\n    const { coluna, comparacao, valor } = this.state;\n    const { filter } = this.props;\n    let fCheck = cOptions;\n    if (filter.length > 0){\n      filter.forEach((elements) => {\n        if(elements.column.includes(fCheck) ){\n          fCheck.splice(fCheck.indexOf())\n        }\n      })\n    }\n\n    return (\n      <div>\n         <label htmlFor=\"selectColumn\">Filtros</label>\n         <select data-testid='column-filter' name=\"coluna\" id=\"selectColumn\" form=\"selectForm\" onChange={this.handleCh}>\n          {cOptions.map((elements)=> \n            <option value={elements}>{elements}</option>\n          )}\n         </select>\n         <br />\n         <label htmlFor=\"selectMaior\"></label>\n         <select data-testid='comparison-filter'name=\"comparacao\" id='selectMaior' form='selectForm'onChange={this.handleCh}>\n           <option>Comparação</option>\n           <option value='maior que'>maior que</option>\n           <option value='menor que'>menor que</option>\n           <option value='igual a'>igual a</option>\n         </select>\n        <input type='number' name='valor' data-testid='value-filter' onChange={this.handleCh}/>\n        <button\n        type = 'button'  \n        value='submit' \n        data-testid='button-filter'\n        onClick={() => this.props.gFilter(coluna,comparacao,valor)}\n        >Filtrar</button>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  filter: state.filters.filterByNumericValues,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  gFilter: (a,b,c) => dispatch(totalFilter(a,b,c)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectsInputs);\n"]},"metadata":{},"sourceType":"module"}