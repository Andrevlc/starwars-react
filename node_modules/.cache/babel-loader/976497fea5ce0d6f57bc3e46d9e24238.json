{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/inputs.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { searchFilter } from '../actions/index';\nimport SelectInputs from './selectInputs';\n\nclass SearchBar extends React.Component {\n  render() {\n    const getValue = this.props.getValue;\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"searchbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Procurar planeta\"), React.createElement(\"input\", {\n      type: \"text\",\n      \"data-testid\": \"name-filter\",\n      id: \"searchbar\",\n      onChange: event => getValue(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(SelectInputs, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      value: \"submit\",\n      \"data-testid\": \"button-filter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Filtrar\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getValue: textFilter => dispatch(searchFilter(textFilter))\n});\n\nSearchBar.propTypes = {\n  getValue: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/inputs.jsx"],"names":["React","PropTypes","connect","searchFilter","SelectInputs","SearchBar","Component","render","getValue","props","event","target","value","mapDispatchToProps","dispatch","textFilter","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,qBAAY,aAFd;AAGE,MAAA,EAAE,EAAC,WAHL;AAIE,MAAA,QAAQ,EAAGE,KAAD,IAAWF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,QAA5B;AAAqC,qBAAY,eAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CADF;AAaD;;AAhBqC;;AAkBxC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,QAAQ,EAAGO,UAAD,IAAgBD,QAAQ,CAACX,YAAY,CAACY,UAAD,CAAb;AADM,CAAf,CAA3B;;AAEAV,SAAS,CAACW,SAAV,GAAsB;AACpBR,EAAAA,QAAQ,EAAEP,SAAS,CAACgB,IAAV,CAAeC;AADL,CAAtB;AAGA,eAAehB,OAAO,CAAC,IAAD,EAAOW,kBAAP,CAAP,CAAkCR,SAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { searchFilter } from '../actions/index';\nimport SelectInputs from './selectInputs';\n\nclass SearchBar extends React.Component {\n  render() {\n    const { getValue } = this.props;\n    return (\n      <form>\n        <label htmlFor=\"searchbar\">Procurar planeta</label>\n        <input\n          type=\"text\"\n          data-testid=\"name-filter\"\n          id=\"searchbar\"\n          onChange={(event) => getValue(event.target.value)}\n        />\n        <SelectInputs />\n        <button type='submit' value='submit' data-testid='button-filter'>Filtrar</button>\n      </form>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  getValue: (textFilter) => dispatch(searchFilter(textFilter)) });\nSearchBar.propTypes = {\n  getValue: PropTypes.func.isRequired,\n};\nexport default connect(null, mapDispatchToProps)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}