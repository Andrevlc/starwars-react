{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets;\n    getCurrentPlanets(); // console.log(oi);\n  }\n\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          getCurrentPlanets = _this$props.getCurrentPlanets;\n    let aux = getCurrentPlanets();\n    console.log(props);\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, () => data.map(element => {\n      React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, element.results.name);\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"StarWars Datatable with Filters\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // ApplicationCache.propTypes = {\n//   getCurrentPlanets: PropTypes.func.isRequired,\n// };\n\n\nexport default connect(null, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","fetchPlanets","PropTypes","Table","Component","componentDidMount","getCurrentPlanets","props","render","data","aux","console","log","map","element","results","name","mapStateToProps","state","swPlanetss","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AACjCC,EAAAA,iBAAiB,GAAE;AAAA,UACTC,iBADS,GACa,KAAKC,KADlB,CACTD,iBADS;AAEjBA,IAAAA,iBAAiB,GAFA,CAGjB;AACD;;AACDE,EAAAA,MAAM,GAAG;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACCE,IADD,eACCA,IADD;AAAA,UACMH,iBADN,eACMA,iBADN;AAEP,QAAII,GAAG,GAAGJ,iBAAiB,EAA3B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,MAAKE,IAAI,CAACI,GAAL,CAAUC,OAAD,IAAW;AACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,OAAO,CAACC,OAAR,CAAgBC,IAApB;AACD,KAFK,CADR,CADF,EAMF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCANE,CADF;AAUD;;AApBgC;;AAuBnC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBV;AADK,CAAZ,CAAxB;;AAGA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,iBAAiB,EAAE,MAAMe,QAAQ,CAChCpB,YAAY,EADoB;AADO,CAAf,CAA3B,C,CAKA;AACA;AACA;;;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAMoB,kBAAN,CAAP,CAAiCjB,KAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component{\n  componentDidMount(){\n    const { getCurrentPlanets } = this.props;\n    getCurrentPlanets();\n    // console.log(oi);\n  }\n  render (){\n    const { data,getCurrentPlanets } = this.props\n    let aux = getCurrentPlanets();\n    console.log(props)\n    return(\n      <section>\n        <div> \n          {()=> data.map((element)=>{\n            <p>{element.results.name}</p>\n          })}\n        </div>\n    <div>StarWars Datatable with Filters</div>\n    </section>\n    )\n  }\n}\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (fetchPlanets()),\n})\n\n// ApplicationCache.propTypes = {\n//   getCurrentPlanets: PropTypes.func.isRequired,\n// };\n\nexport default connect(null,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}