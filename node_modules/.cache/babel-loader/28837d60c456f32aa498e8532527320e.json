{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets;\n    getCurrentPlanets();\n    console.log(getCurrentPlanets);\n  }\n\n  render() {\n    const _this$props$swPlanets = this.props.swPlanetss,\n          planet = _this$props$swPlanets.planet,\n          name = _this$props$swPlanets.name,\n          rotation_period = _this$props$swPlanets.rotation_period,\n          diameter = _this$props$swPlanets.diameter,\n          climate = _this$props$swPlanets.climate,\n          gravity = _this$props$swPlanets.gravity,\n          terrain = _this$props$swPlanets.terrain,\n          surface_water = _this$props$swPlanets.surface_water,\n          population = _this$props$swPlanets.population;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, planet.map(planet => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, planet.name))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"StarWars Datatable with Filters\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: {// name: state.swPlanetss.name,\n    // rotation_period: state.swPlanetss.rotation_period,\n    // diameter:state.swPlanetss.diameter,\n    // climate: state.swPlanetss.climate,\n    // gravite: state.swPlanetss.gravity,\n    // terrain: state.swPlanetss.terrain,\n    // surface_water: state.swPlanetss.surface_water,\n    // population: state.swPlanetss.population,\n  }\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n});\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","fetchPlanets","PropTypes","Table","Component","componentDidMount","getCurrentPlanets","props","console","log","render","swPlanetss","planet","name","rotation_period","diameter","climate","gravity","terrain","surface_water","population","map","mapStateToProps","state","mapDispatchToProps","dispatch","ApplicationCache","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AACjCC,EAAAA,iBAAiB,GAAE;AAAA,UACTC,iBADS,GACa,KAAKC,KADlB,CACTD,iBADS;AAEjBA,IAAAA,iBAAiB;AACjBE,IAAAA,OAAO,CAACC,GAAR,CAAYH,iBAAZ;AACD;;AACDI,EAAAA,MAAM,GAAG;AAAA,kCACmG,KAAKH,KAAL,CAAWI,UAD9G;AAAA,UACEC,MADF,yBACEA,MADF;AAAA,UACUC,IADV,yBACUA,IADV;AAAA,UACgBC,eADhB,yBACgBA,eADhB;AAAA,UACiCC,QADjC,yBACiCA,QADjC;AAAA,UAC2CC,OAD3C,yBAC2CA,OAD3C;AAAA,UACoDC,OADpD,yBACoDA,OADpD;AAAA,UAC6DC,OAD7D,yBAC6DA,OAD7D;AAAA,UACsEC,aADtE,yBACsEA,aADtE;AAAA,UACqFC,UADrF,yBACqFA,UADrF;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,MAAM,CAACS,GAAP,CAAYT,MAAD,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,MAAM,CAACC,IAAX,CADD,CADH,CA1BF,EA+BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA/BE,CADF;AAmCD;;AA3CgC;;AA8CnC,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,UAAU,EAAC,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARW;AADuB,CAAZ,CAAxB;;AAaA,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAChCxB,YAAY,EADoB;AADO,CAAf,CAA3B;;AAKAyB,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BrB,EAAAA,iBAAiB,EAAEJ,SAAS,CAAC0B,IAAV,CAAeC;AADP,CAA7B;AAIA,eAAe7B,OAAO,CAACsB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CrB,KAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component{\n  componentDidMount(){\n    const { getCurrentPlanets } = this.props;\n    getCurrentPlanets();\n    console.log(getCurrentPlanets);\n  }\n  render (){\n     const { planet, name, rotation_period, diameter, climate, gravity, terrain, surface_water, population} = this.props.swPlanetss;\n    return(\n      <section>\n        {/* <table>\n          <thead>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          </thead>\n          <tbody>\n          <tr>\n            <td>{name}</td>\n            <td>{rotation_period}</td>\n            <td>{diameter}</td>\n            <td>{climate}</td>\n            <td>{gravity}</td>\n            <td>{terrain}</td>\n            <td>{surface_water}</td>\n            <td>{population}</td>\n          </tr>\n          </tbody>\n        </table> */}\n        \n        <div> \n          {planet.map((planet)=>\n            <p>{planet.name}</p>\n          )}\n            </div>\n    <div>StarWars Datatable with Filters</div>\n    </section>\n    )\n  }\n  }\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss:{\n  // name: state.swPlanetss.name,\n  // rotation_period: state.swPlanetss.rotation_period,\n  // diameter:state.swPlanetss.diameter,\n  // climate: state.swPlanetss.climate,\n  // gravite: state.swPlanetss.gravity,\n  // terrain: state.swPlanetss.terrain,\n  // surface_water: state.swPlanetss.surface_water,\n  // population: state.swPlanetss.population,\n  }\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (fetchPlanets()),\n})\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}