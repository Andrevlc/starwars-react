{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\nimport getPlanets from '../services/data';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets;\n    getCurrentPlanets(); // console.log(oi);\n  }\n\n  render() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          oi = _this$props.oi,\n          getCurrentPlanets = _this$props.getCurrentPlanets;\n    let aux = getCurrentPlanets(); // console.log (aux);\n\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, aux.map(cat => React.createElement(\"p\", {\n      key: cat.id,\n      \"data-testid\": \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      id: cat.id,\n      name: \"categoria\",\n      value: cat.id,\n      onClick: searchCod => {\n        this.searchCat(searchCod);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: cat.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, cat.name)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"StarWars Datatable with Filters\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n});\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","fetchPlanets","PropTypes","getPlanets","Table","Component","componentDidMount","getCurrentPlanets","props","render","swPlanetss","oi","aux","map","cat","id","searchCod","searchCat","name","mapStateToProps","state","data","mapDispatchToProps","dispatch","ApplicationCache","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAmC;AACjCC,EAAAA,iBAAiB,GAAE;AAAA,UACTC,iBADS,GACa,KAAKC,KADlB,CACTD,iBADS;AAEjBA,IAAAA,iBAAiB,GAFA,CAGjB;AACD;;AACDE,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKD,KAD5C;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaC,EADb,eACaA,EADb;AAAA,UACiBJ,iBADjB,eACiBA,iBADjB;AAEP,QAAIK,GAAG,GAAGL,iBAAiB,EAA3B,CAFO,CAGP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCK,GAAG,CAACC,GAAJ,CAASC,GAAD,IACP;AAAG,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAZ;AAAgB,qBAAY,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAED,GAAG,CAACC,EAFV;AAGE,MAAA,IAAI,EAAC,WAHP;AAIE,MAAA,KAAK,EAAED,GAAG,CAACC,EAJb;AAKE,MAAA,OAAO,EAAGC,SAAD,IAAe;AAAE,aAAKC,SAAL,CAAeD,SAAf;AAA4B,OALxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AAAO,MAAA,OAAO,EAAEF,GAAG,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBD,GAAG,CAACI,IAA7B,CARF,CADD,CADD,CADF,EAeF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAfE,CADF;AAmBD;;AA7BgC;;AAgCnC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,UAAU,EAAEU,KAAK,CAACV,UAAN,CAAiBW;AADK,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,iBAAiB,EAAE,MAAMgB,QAAQ,CAChCtB,YAAY,EADoB;AADO,CAAf,CAA3B;;AAKAuB,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BlB,EAAAA,iBAAiB,EAAEL,SAAS,CAACwB,IAAV,CAAeC;AADP,CAA7B;AAIA,eAAe3B,OAAO,CAAC,IAAD,EAAMsB,kBAAN,CAAP,CAAiClB,KAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\nimport getPlanets from '../services/data';\n\nclass Table extends React.Component{\n  componentDidMount(){\n    const { getCurrentPlanets } = this.props;\n    getCurrentPlanets();\n    // console.log(oi);\n  }\n  render (){\n    const { swPlanetss, oi, getCurrentPlanets } = this.props\n    let aux = getCurrentPlanets();\n    // console.log (aux);\n    return(\n      <section>\n        <div>\n        {aux.map((cat) => (\n          <p key={cat.id} data-testid=\"category\">\n            <input\n              type=\"radio\"\n              id={cat.id}\n              name=\"categoria\"\n              value={cat.id}\n              onClick={(searchCod) => { this.searchCat(searchCod); }}\n            />\n            <label htmlFor={cat.id}>{cat.name}</label>\n          </p>\n        ))}\n      </div>\n    <div>StarWars Datatable with Filters</div>\n    </section>\n    )\n  }\n}\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (fetchPlanets()),\n})\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n};\n\nexport default connect(null,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}