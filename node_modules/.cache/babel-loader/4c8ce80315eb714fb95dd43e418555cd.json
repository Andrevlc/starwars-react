{"ast":null,"code":"import _objectSpread from \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { REQUEST_PLANETS, REQUEST_PLANETS_FAILURE, REQUEST_PLANETS_SUCCESS } from '../actions';\nconst CHECK_FETCH = {\n  isFetching: false\n};\n\nconst swPlanetss = (state = CHECK_FETCH, action) => {\n  switch (action.type) {\n    case REQUEST_PLANETS:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case REQUEST_PLANETS_SUCCESS:\n      return _objectSpread({}, state, {\n        name: action.name,\n        rotation_period: action.rotation_period,\n        diameter: action.diameter,\n        climate: action.climate,\n        gravite: action.gravity,\n        terrain: action.terrain,\n        surface_water: action.surface_water,\n        population: action.population,\n        isFetching: false\n      });\n\n    case REQUEST_PLANETS_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.error,\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default swPlanetss;","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/reducers/swPlanets.js"],"names":["REQUEST_PLANETS","REQUEST_PLANETS_FAILURE","REQUEST_PLANETS_SUCCESS","CHECK_FETCH","isFetching","swPlanetss","state","action","type","name","rotation_period","diameter","climate","gravite","gravity","terrain","surface_water","population","error"],"mappings":";AAAA,SACEA,eADF,EAEEC,uBAFF,EAGEC,uBAHF,QAIO,YAJP;AAMA,MAAMC,WAAW,GAAE;AACjBC,EAAAA,UAAU,EAAE;AADK,CAAnB;;AAGA,MAAMC,UAAU,GAAG,CAAEC,KAAK,GAAGH,WAAV,EAAuBI,MAAvB,KAAmC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKR,eAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,UAAU,EAAE;AAFd;;AAIF,SAAKF,uBAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAFf;AAGEC,QAAAA,eAAe,EAAEH,MAAM,CAACG,eAH1B;AAIEC,QAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAJnB;AAKEC,QAAAA,OAAO,EAAEL,MAAM,CAACK,OALlB;AAMEC,QAAAA,OAAO,EAAEN,MAAM,CAACO,OANlB;AAOEC,QAAAA,OAAO,EAAER,MAAM,CAACQ,OAPlB;AAQEC,QAAAA,aAAa,EAAET,MAAM,CAACS,aARxB;AASEC,QAAAA,UAAU,EAAEV,MAAM,CAACU,UATrB;AAUEb,QAAAA,UAAU,EAAE;AAVd;;AAYA,SAAKH,uBAAL;AACE,+BACKK,KADL;AAEEY,QAAAA,KAAK,EAAEX,MAAM,CAACW,KAFhB;AAGEd,QAAAA,UAAU,EAAE;AAHd;;AAKF;AACE,aAAOE,KAAP;AA1BN;AA4BD,CA7BD;;AA8BA,eAAeD,UAAf","sourcesContent":["import {\n  REQUEST_PLANETS,\n  REQUEST_PLANETS_FAILURE,\n  REQUEST_PLANETS_SUCCESS,\n} from '../actions';\n\nconst CHECK_FETCH ={\n  isFetching: false,\n}\nconst swPlanetss = ( state = CHECK_FETCH, action ) => {\n  switch(action.type) {\n    case REQUEST_PLANETS:\n      return {\n        ...state,\n        isFetching: true,\n      }\n    case REQUEST_PLANETS_SUCCESS:\n      return {\n        ...state,\n        name: action.name,\n        rotation_period: action.rotation_period,\n        diameter: action.diameter,\n        climate: action.climate,\n        gravite: action.gravity,\n        terrain: action.terrain,\n        surface_water: action.surface_water,\n        population: action.population,\n        isFetching: false,\n      }\n      case REQUEST_PLANETS_FAILURE:\n        return {\n          ...state,\n          error: action.error,\n          isFetching: false,\n        }\n      default:\n        return state;\n  }\n}\nexport default swPlanetss;\n"]},"metadata":{},"sourceType":"module"}