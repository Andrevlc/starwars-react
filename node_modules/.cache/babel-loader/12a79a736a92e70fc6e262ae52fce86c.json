{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types'; // class Table extends React.Component{\n//   componentDidMount(){\n//     const { getCurrentPlanets } = this.props;\n//     console.log('antes de chamar')\n//     getCurrentPlanets();\n//     // console.log(oi);\n//   }\n//   render (){\n//     const { swPlanetss, isFetching } = this.props\n//     console.log(this.props)\n//     console.log(swPlanetss);\n//     console.log(typeof(swPlanetss))\n//     return(\n//       <section>\n//         <div> \n//          {swPlanetss.map((elements)=> (\n//            <div>{elements.name}</div>\n//          ))}\n//         </div>\n//     <div>StarWars Datatable with Filters</div>\n//     </section>\n//     )\n//   }\n// }\n\nfunction Table(props) {\n  const results = props.results;\n  console.log(results);\n  props.getCurrentPlanets();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data.results,\n  isFetching: state.swPlanetss.isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // ApplicationCache.propTypes = {\n//   getCurrentPlanets: PropTypes.func.isRequired,\n// };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","fetchPlanets","PropTypes","Table","props","results","console","log","getCurrentPlanets","mapStateToProps","state","swPlanetss","data","isFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAAA,QACbC,OADa,GACDD,KADC,CACbC,OADa;AAErBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAD,EAAAA,KAAK,CAACI,iBAAN;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD;;AAED,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,UAAU,EAAED,KAAK,CAACC,UAAN,CAAiBC,IAAjB,CAAsBP,OADA;AAElCQ,EAAAA,UAAU,EAAEH,KAAK,CAACC,UAAN,CAAiBE;AAFK,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,iBAAiB,EAAE,MAAMO,QAAQ,CAChCd,YAAY,EADoB;AADO,CAAf,CAA3B,C,CAKA;AACA;AACA;;;AAEA,eAAeD,OAAO,CAACS,eAAD,EAAiBK,kBAAjB,CAAP,CAA4CX,KAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\n// class Table extends React.Component{\n//   componentDidMount(){\n//     const { getCurrentPlanets } = this.props;\n//     console.log('antes de chamar')\n//     getCurrentPlanets();\n//     // console.log(oi);\n//   }\n\n//   render (){\n//     const { swPlanetss, isFetching } = this.props\n//     console.log(this.props)\n//     console.log(swPlanetss);\n//     console.log(typeof(swPlanetss))\n//     return(\n//       <section>\n//         <div> \n//          {swPlanetss.map((elements)=> (\n//            <div>{elements.name}</div>\n//          ))}\n//         </div>\n//     <div>StarWars Datatable with Filters</div>\n//     </section>\n//     )\n//   }\n// }\nfunction Table (props) {\n  const { results } = props;\n  console.log(results)\n  props.getCurrentPlanets();\n  return(\n    <div>\n\n    </div>\n  )\n}\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data.results,\n  isFetching: state.swPlanetss.isFetching,\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (fetchPlanets()),\n})\n\n// ApplicationCache.propTypes = {\n//   getCurrentPlanets: PropTypes.func.isRequired,\n// };\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}