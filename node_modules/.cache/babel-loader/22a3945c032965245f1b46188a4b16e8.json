{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets;\n    getCurrentPlanets(); // console.log(oi);\n  }\n\n  render() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          oi = _this$props.oi,\n          getCurrentPlanets = _this$props.getCurrentPlanets;\n    let aux = getCurrentPlanets();\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, console.log(aux), aux[0].results.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"StarWars Datatable with Filters\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n});\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","fetchPlanets","PropTypes","Table","Component","componentDidMount","getCurrentPlanets","props","render","swPlanetss","oi","aux","console","log","results","name","mapStateToProps","state","data","mapDispatchToProps","dispatch","ApplicationCache","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AACjCC,EAAAA,iBAAiB,GAAE;AAAA,UACTC,iBADS,GACa,KAAKC,KADlB,CACTD,iBADS;AAEjBA,IAAAA,iBAAiB,GAFA,CAGjB;AACD;;AACDE,EAAAA,MAAM,GAAG;AAAA,wBACuC,KAAKD,KAD5C;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaC,EADb,eACaA,EADb;AAAA,UACiBJ,iBADjB,eACiBA,iBADjB;AAEP,QAAIK,GAAG,GAAGL,iBAAiB,EAA3B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADH,EAEGA,GAAG,CAAC,CAAD,CAAH,CAAOG,OAAP,CAAeC,IAFlB,CADF,EAKF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALE,CADF;AASD;;AAnBgC;;AAsBnC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,CAAiBS;AADK,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,iBAAiB,EAAE,MAAMc,QAAQ,CAChCnB,YAAY,EADoB;AADO,CAAf,CAA3B;;AAKAoB,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BhB,EAAAA,iBAAiB,EAAEJ,SAAS,CAACqB,IAAV,CAAeC;AADP,CAA7B;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAMmB,kBAAN,CAAP,CAAiChB,KAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component{\n  componentDidMount(){\n    const { getCurrentPlanets } = this.props;\n    getCurrentPlanets();\n    // console.log(oi);\n  }\n  render (){\n    const { swPlanetss, oi, getCurrentPlanets } = this.props\n    let aux = getCurrentPlanets();\n    \n    return(\n      <section>\n        <div> \n          {console.log(aux)}\n          {aux[0].results.name}\n        </div>\n    <div>StarWars Datatable with Filters</div>\n    </section>\n    )\n  }\n}\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (fetchPlanets()),\n})\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n};\n\nexport default connect(null,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}