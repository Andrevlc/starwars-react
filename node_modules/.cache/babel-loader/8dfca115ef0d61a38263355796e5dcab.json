{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets; // console.log('antes de chamar')\n\n    getCurrentPlanets();\n  }\n\n  filterTest() {} // const { swPlanetss, cColumn, cOperation, cNumber } = this.props;\n  // let data = swPlanetss;\n  // data.foreach((planets)=> {\n  //   data.planets ((planet) => { \n  //     switch (cOperation) {\n  //       case 'maior que':\n  //         return (planet[cColumn]) > (cNumber);\n  //       case 'igual a': \n  //         return (planet[cColumn]) === (cNumber);\n  //       case 'menor que': \n  //         return (planet[cColumn]) < (cNumber);\n  //       default: \n  //         return planet;\n  //       }\n  //   } )\n  // })\n  // return data\n  // if(cColumn !== undefined){\n  //   let tempC = cColumn;\n  //   if(cOperation === 'maior que'){\n  //     console.log('oi')\n  //     data.filter((plani) => (plani.tempC> cNumber))}\n  //   else if (cOperation === 'menor que'){\n  //       data.filter ((plani) => (\n  //         plani.cColumn < cNumber\n  //       ))}\n  //   else if (cOperation === 'igual a'){\n  //         data.filter ((plani) => (\n  //           plani.cColumn === cNumber\n  //         ))}\n  // }\n  // console.log(data)\n  // console.log (cColumn)\n\n\n  render() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          isFetching = _this$props.isFetching,\n          textFilter = _this$props.textFilter;\n\n    if (isFetching) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      value: \"submit\",\n      \"data-testid\": \"button-filter\",\n      onClick: () => this.filterTest(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Filtrar\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TableHeaders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, swPlanetss.filter(planet => planet.name.toLowerCase().includes(textFilter.toLowerCase())).map(elements => React.createElement(TableValues, {\n      key: elements.diameter,\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  cColumn: state.filters.filterByNumber.column,\n  cOperation: state.filters.filterByNumber.operation,\n  cNumber: state.filters.filterByNumber.number\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\n\n\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","PropTypes","connect","fetchPlanets","TableHeaders","TableValues","Table","Component","componentDidMount","getCurrentPlanets","props","filterTest","render","swPlanetss","isFetching","textFilter","filter","planet","name","toLowerCase","includes","map","elements","diameter","mapStateToProps","state","data","filters","filterByName","cColumn","filterByNumber","column","cOperation","operation","cNumber","number","mapDispatchToProps","dispatch","propTypes","func","isRequired","array","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues'\n\nclass Table extends React.Component {\n  \n  componentDidMount() {\n    const { getCurrentPlanets } = this.props;\n    // console.log('antes de chamar')\n    getCurrentPlanets();\n  }\n  filterTest() {\n    // const { swPlanetss, cColumn, cOperation, cNumber } = this.props;\n    // let data = swPlanetss;\n    // data.foreach((planets)=> {\n    //   data.planets ((planet) => { \n    //     switch (cOperation) {\n    //       case 'maior que':\n    //         return (planet[cColumn]) > (cNumber);\n    //       case 'igual a': \n    //         return (planet[cColumn]) === (cNumber);\n    //       case 'menor que': \n    //         return (planet[cColumn]) < (cNumber);\n    //       default: \n    //         return planet;\n    //       }\n        \n    //   } )\n    // })\n    // return data\n  }\n    // if(cColumn !== undefined){\n    //   let tempC = cColumn;\n    //   if(cOperation === 'maior que'){\n    //     console.log('oi')\n    //     data.filter((plani) => (plani.tempC> cNumber))}\n    //   else if (cOperation === 'menor que'){\n    //       data.filter ((plani) => (\n    //         plani.cColumn < cNumber\n    //       ))}\n    //   else if (cOperation === 'igual a'){\n    //         data.filter ((plani) => (\n    //           plani.cColumn === cNumber\n    //         ))}\n    // }\n    // console.log(data)\n    // console.log (cColumn)\n\n  render() {\n    const { swPlanetss, isFetching, textFilter } = this.props;\n    if (isFetching) { return <p>Carregando...</p>; }\n    return (\n      <section>\n        <button  \n        value='submit' \n        data-testid='button-filter'\n        onClick={() => this.filterTest()}\n        >Filtrar</button>\n        <table>\n          <TableHeaders />\n          <tbody>\n          {swPlanetss\n          .filter((planet) => (planet.name.toLowerCase().includes(textFilter.toLowerCase())))\n          .map((elements) => (\n            <TableValues key={elements.diameter} elements={ elements } />\n          ))}\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n  cColumn: state.filters.filterByNumber.column,\n  cOperation: state.filters.filterByNumber.operation,\n  cNumber: state.filters.filterByNumber.number,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets()) });\n// Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}