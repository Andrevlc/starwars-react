{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets;\n    let oi = getCurrentPlanets();\n    console.log(oi);\n  }\n\n  render() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          oi = _this$props.oi,\n          getCurrentPlanets = _this$props.getCurrentPlanets;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, console.log(getCurrentPlanets)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"StarWars Datatable with Filters\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n});\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","fetchPlanets","PropTypes","Table","Component","componentDidMount","getCurrentPlanets","props","oi","console","log","render","swPlanetss","mapStateToProps","state","data","mapDispatchToProps","dispatch","ApplicationCache","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AACjCC,EAAAA,iBAAiB,GAAE;AAAA,UACTC,iBADS,GACa,KAAKC,KADlB,CACTD,iBADS;AAEjB,QAAIE,EAAE,GAAGF,iBAAiB,EAA1B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACD;;AACDG,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKJ,KAD7C;AAAA,UACEK,UADF,eACEA,UADF;AAAA,UACcJ,EADd,eACcA,EADd;AAAA,UACkBF,iBADlB,eACkBA,iBADlB;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGG,OAAO,CAACC,GAAR,CAAYJ,iBAAZ,CALH,CADF,EAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCARE,CADF;AAYD;;AApBgC;;AAuBnC,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBG;AADK,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,iBAAiB,EAAE,MAAMW,QAAQ,CAChChB,YAAY,EADoB;AADO,CAAf,CAA3B;;AAKAiB,gBAAgB,CAACC,SAAjB,GAA6B;AAC3Bb,EAAAA,iBAAiB,EAAEJ,SAAS,CAACkB,IAAV,CAAeC;AADP,CAA7B;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAMgB,kBAAN,CAAP,CAAiCb,KAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport PropTypes from 'prop-types';\n\nclass Table extends React.Component{\n  componentDidMount(){\n    const { getCurrentPlanets } = this.props;\n    let oi = getCurrentPlanets();\n    console.log(oi);\n  }\n  render (){\n     const { swPlanetss, oi, getCurrentPlanets } = this.props\n    return(\n      <section>\n        <div> \n          {/* {oi.map((results)=>{\n            <p>{results.planet}</p>\n          })} */}\n          {/* {console.log(oi.results)} */}\n          {console.log(getCurrentPlanets)}\n          </div>\n    <div>StarWars Datatable with Filters</div>\n    </section>\n    )\n  }\n  }\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (fetchPlanets()),\n})\n\nApplicationCache.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n};\n\nexport default connect(null,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}