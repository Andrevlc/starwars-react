{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets; // console.log('antes de chamar')\n\n    getCurrentPlanets();\n  }\n\n  render() {\n    const _this$props = this.props,\n          swPlanetss = _this$props.swPlanetss,\n          isFetching = _this$props.isFetching,\n          textFilter = _this$props.textFilter;\n\n    if (isFetching) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(TableHeaders, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), swPlanetss.filter(planet => planet.name.toLowerCase().includes(textFilter.toLowerCase())).map(elements => React.createElement(TableValues, {\n      elements: elements,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) // <tbody key={elements.name}>\n    //   <tr>\n    //     <td>{elements.name}</td>\n    //     <td>{elements.rotation_period}</td>\n    //     <td>{elements.orbital_period}</td>\n    //     <td>{elements.diameter}</td>\n    //     <td>{elements.climate}</td>\n    //     <td>{elements.gravity}</td>\n    //     <td>{elements.terrain}</td>\n    //     <td>{elements.surface_water}</td>\n    //     <td>{elements.population}</td>\n    //     <td>{elements.films}</td>\n    //     <td>{elements.created}</td>\n    //     <td>{elements.edited}</td>\n    //     <td>{elements.url}</td>\n    //   </tr>\n    // </tbody>\n    )));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n}); // Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\n\n\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","PropTypes","connect","fetchPlanets","TableHeaders","TableValues","Table","Component","componentDidMount","getCurrentPlanets","props","render","swPlanetss","isFetching","textFilter","filter","planet","name","toLowerCase","includes","map","elements","mapStateToProps","state","data","filters","filterByName","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,iBADU,GACY,KAAKC,KADjB,CACVD,iBADU,EAElB;;AACAA,IAAAA,iBAAiB;AAClB;;AACDE,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKD,KAD7C;AAAA,UACCE,UADD,eACCA,UADD;AAAA,UACaC,UADb,eACaA,UADb;AAAA,UACyBC,UADzB,eACyBA,UADzB;;AAEP,QAAID,UAAJ,EAAgB;AAAE,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAA8B;;AAEhD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGD,UAAU,CACVG,MADA,CACQC,MAAD,IAAaA,MAAM,CAACC,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCL,UAAU,CAACI,WAAX,EAAnC,CADpB,EAEAE,GAFA,CAEKC,QAAD,IACH,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBD,KAFH,CADF,CADF;AA6BD;;AAvCiC;;AA0CpC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,UAAU,EAAEW,KAAK,CAACX,UAAN,CAAiBY,IADK;AAElCX,EAAAA,UAAU,EAAEU,KAAK,CAACX,UAAN,CAAiBC,UAFK;AAGlCC,EAAAA,UAAU,EAAES,KAAK,CAACE,OAAN,CAAcC,YAAd,CAA2BT;AAHL,CAAZ,CAAxB;;AAKA,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,iBAAiB,EAAE,MAAMmB,QAAQ,CAACzB,YAAY,EAAb;AADO,CAAf,CAA3B,C,CAEA;AACA;;;AACAG,KAAK,CAACuB,SAAN,GAAkB;AAChBpB,EAAAA,iBAAiB,EAAER,SAAS,CAAC6B,IAAV,CAAeC,UADlB;AAEhBnB,EAAAA,UAAU,EAAEX,SAAS,CAAC6B,IAAV,CAAeC,UAFX;AAGhBlB,EAAAA,UAAU,EAAEZ,SAAS,CAAC+B,IAAV,CAAeD,UAHX;AAIhBjB,EAAAA,UAAU,EAAEb,SAAS,CAAC6B,IAAV,CAAeC;AAJX,CAAlB;AAOA,eAAe7B,OAAO,CAACoB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CrB,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\nimport TableHeaders from './tableheaders';\nimport TableValues from './tableValues'\nclass Table extends React.Component {\n  componentDidMount() {\n    const { getCurrentPlanets } = this.props;\n    // console.log('antes de chamar')\n    getCurrentPlanets();\n  }\n  render() {\n    const { swPlanetss, isFetching, textFilter } = this.props;\n    if (isFetching) { return <p>Carregando...</p>; }\n\n    return (\n      <section>\n        <table>\n          <TableHeaders />\n          {swPlanetss\n          .filter((planet) => (planet.name.toLowerCase().includes(textFilter.toLowerCase())))\n          .map((elements) => (\n            <TableValues elements={elements} />\n            // <tbody key={elements.name}>\n            //   <tr>\n            //     <td>{elements.name}</td>\n            //     <td>{elements.rotation_period}</td>\n            //     <td>{elements.orbital_period}</td>\n            //     <td>{elements.diameter}</td>\n            //     <td>{elements.climate}</td>\n            //     <td>{elements.gravity}</td>\n            //     <td>{elements.terrain}</td>\n            //     <td>{elements.surface_water}</td>\n            //     <td>{elements.population}</td>\n            //     <td>{elements.films}</td>\n            //     <td>{elements.created}</td>\n            //     <td>{elements.edited}</td>\n            //     <td>{elements.url}</td>\n            //   </tr>\n            // </tbody>\n          ))}\n        </table>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  swPlanetss: state.swPlanetss.data,\n  isFetching: state.swPlanetss.isFetching,\n  textFilter: state.filters.filterByName.name,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets()) });\n// Dúvida solucionada no site\n// https://stackoverflow.com/questions/38684925/react-eslint-error-missing-in-props-validation\nTable.propTypes = {\n  getCurrentPlanets: PropTypes.func.isRequired,\n  swPlanetss: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  textFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}