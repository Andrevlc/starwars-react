{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startingPlanets } from '../actions';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets;\n    getCurrentPlanets();\n  }\n\n  render() {\n    const _this$props$swPlanets = this.props.swPlanets,\n          name = _this$props$swPlanets.name,\n          rotationP = _this$props$swPlanets.rotationP,\n          diameter = _this$props$swPlanets.diameter,\n          climate = _this$props$swPlanets.climate,\n          gravite = _this$props$swPlanets.gravite,\n          terrain = _this$props$swPlanets.terrain,\n          surfaceWater = _this$props$swPlanets.surfaceWater,\n          population = _this$props$swPlanets.population;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Rotation Period\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Diameter\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Climate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Gravity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Terrain\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Surface Water\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, rotationP), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, diameter), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, climate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, gravite), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, terrain), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, surfaceWater), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, population))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"StarWars Datatable with Filters\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: {\n    name: state.swPlanetss.name,\n    rotationP: state.swPlanetss.rotationP,\n    diameter: state.swPlanets.diameter,\n    climate: state.swPlanets.climate,\n    gravite: state.swPlanets.gravite,\n    terrain: state.swPlanets.terrain,\n    surfaceWater: state.swPlanets.surfaceWater,\n    population: state.swPlanets.population\n  }\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(startingPlanets())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","startingPlanets","Table","Component","componentDidMount","getCurrentPlanets","props","render","swPlanets","name","rotationP","diameter","climate","gravite","terrain","surfaceWater","population","mapStateToProps","state","swPlanetss","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { startingPlanets } from '../actions'\nclass Table extends React.Component{\n  componentDidMount(){\n    const { getCurrentPlanets } = this.props;\n    getCurrentPlanets();\n  }\n  render (){\n     const { name, rotationP, diameter, climate, gravite, terrain, surfaceWater, population} = this.props.swPlanets;\n    return(\n      <section>\n        <table>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <tr>\n            <td>{name}</td>\n            <td>{rotationP}</td>\n            <td>{diameter}</td>\n            <td>{climate}</td>\n            <td>{gravite}</td>\n            <td>{terrain}</td>\n            <td>{surfaceWater}</td>\n            <td>{population}</td>\n          </tr>\n        </table>\n    <div>StarWars Datatable with Filters</div>\n    </section>\n    )\n  }\n  }\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss:{\n  name: state.swPlanetss.name,\n  rotationP: state.swPlanetss.rotationP,\n  diameter:state.swPlanets.diameter,\n  climate: state.swPlanets.climate,\n  gravite: state.swPlanets.gravite,\n  terrain: state.swPlanets.terrain,\n  surfaceWater: state.swPlanets.surfaceWater,\n  population: state.swPlanets.population,\n  }\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (startingPlanets()),\n})\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}