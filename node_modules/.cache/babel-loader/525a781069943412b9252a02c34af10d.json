{"ast":null,"code":"var _jsxFileName = \"/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPlanets } from '../actions';\n\nclass Table extends React.Component {\n  componentDidMount() {\n    const getCurrentPlanets = this.props.getCurrentPlanets;\n    getCurrentPlanets();\n  }\n\n  render() {\n    const _this$props$swPlanets = this.props.swPlanetss,\n          name = _this$props$swPlanets.name,\n          rotation_period = _this$props$swPlanets.rotation_period,\n          diameter = _this$props$swPlanets.diameter,\n          climate = _this$props$swPlanets.climate,\n          gravity = _this$props$swPlanets.gravity,\n          terrain = _this$props$swPlanets.terrain,\n          surface_water = _this$props$swPlanets.surface_water,\n          population = _this$props$swPlanets.population;\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Rotation Period\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Diameter\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Climate\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Gravity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Terrain\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Surface Water\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, rotation_period), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, diameter), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, climate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, gravity), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, terrain), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, surface_water), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, population))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"StarWars Datatable with Filters\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  swPlanetss: {\n    name: state.swPlanetss.name,\n    rotation_period: state.swPlanetss.rotation_period,\n    diameter: state.swPlanetss.diameter,\n    climate: state.swPlanetss.climate,\n    gravite: state.swPlanetss.gravity,\n    terrain: state.swPlanetss.terrain,\n    surface_water: state.swPlanetss.surface_water,\n    population: state.swPlanetss.population\n  }\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCurrentPlanets: () => dispatch(fetchPlanets())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/andre/Trybe/Projeto/sd-05-block16-project-react-redux-starwars-database-filters/src/components/Table.js"],"names":["React","connect","fetchPlanets","Table","Component","componentDidMount","getCurrentPlanets","props","render","swPlanetss","name","rotation_period","diameter","climate","gravity","terrain","surface_water","population","mapStateToProps","state","gravite","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchPlanets } from '../actions'\nclass Table extends React.Component{\n  componentDidMount(){\n    const { getCurrentPlanets } = this.props;\n    getCurrentPlanets();\n  }\n  render (){\n     const { name, rotation_period, diameter, climate, gravity, terrain, surface_water, population} = this.props.swPlanetss;\n    return(\n      <section>\n        <table>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <tr>\n            <td>{name}</td>\n            <td>{rotation_period}</td>\n            <td>{diameter}</td>\n            <td>{climate}</td>\n            <td>{gravity}</td>\n            <td>{terrain}</td>\n            <td>{surface_water}</td>\n            <td>{population}</td>\n          </tr>\n        </table>\n    <div>StarWars Datatable with Filters</div>\n    </section>\n    )\n  }\n  }\n  \nconst mapStateToProps = (state) => ({\n  swPlanetss:{\n  name: state.swPlanetss.name,\n  rotation_period: state.swPlanetss.rotation_period,\n  diameter:state.swPlanetss.diameter,\n  climate: state.swPlanetss.climate,\n  gravite: state.swPlanetss.gravity,\n  terrain: state.swPlanetss.terrain,\n  surface_water: state.swPlanetss.surface_water,\n  population: state.swPlanetss.population,\n  }\n\n})\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrentPlanets: () => dispatch\n  (fetchPlanets()),\n})\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}